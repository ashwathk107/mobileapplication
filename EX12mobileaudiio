
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;

import android.Manifest;
import android.content.ContextWrapper;
import android.content.pm.PackageManager;
import android.media.MediaPlayer;
import android.media.MediaRecorder;
import android.os.Bundle;
import android.os.Environment;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

import java.io.File;

public class MainActivity extends AppCompatActivity {
    private static intMICROPHONE_PERMISSION_CODE = 200;
MediaRecordermr;
MediaPlayermp;
    Button b1,b2,b3;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
        b1 = (Button) findViewById(R.id.button);
        b2 = (Button) findViewById(R.id.button2);
        b3 = (Button) findViewById(R.id.button3);


        if(isMicrophonePresent())
        {
getMicrophonePermission();
        }
        b1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                try {
mr = new MediaRecorder();
mr.setAudioSource(MediaRecorder.AudioSource.MIC);
mr.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);
mr.setOutputFile(getRecordingFilePath());
mr.setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB);
mr.prepare();
mr.start();
Toast.makeText(MainActivity.this,"Recording is started",Toast.LENGTH_LONG).show();


                }

                catch(Exception e){
e.printStackTrace();
                }

            }
        });
        b2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
mr.stop();
mr.release();
mr = null;
Toast.makeText(MainActivity.this,"Recording is paused",Toast.LENGTH_LONG).show();

            }
        });
        b3.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                try{
mp = new MediaPlayer();
mp.setDataSource(getRecordingFilePath());
mp.prepare();
mp.start();
Toast.makeText(MainActivity.this,"Recording is played",Toast.LENGTH_LONG).show();
                }
                catch(Exception e){
e.printStackTrace();
                }
            }
        });
    }
    private booleanisMicrophonePresent()
    {
        if(this.getPackageManager().hasSystemFeature(PackageManager.FEATURE_MICROPHONE))
        {
            return true;

        }
        else
        {
            return false;
        }
    }
    private void getMicrophonePermission(){
        if(ContextCompat.checkSelfPermission(this, Manifest.permission.RECORD_AUDIO)==PackageManager.PERMISSION_DENIED){
ActivityCompat.requestPermissions(this,new String[]{Manifest.permission.RECORD_AUDIO},MICROPHONE_PERMISSION_CODE);
        }
    }

    private String getRecordingFilePath(){
ContextWrappercw = new ContextWrapper(getApplicationContext());
        File dr = cw.getExternalFilesDir(Environment.DIRECTORY_MUSIC);
        File f = new File(dr,"testRecordingFile"+".mp3");
        return f.getPath();
    }
}
